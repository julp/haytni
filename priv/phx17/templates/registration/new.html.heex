<%%= if Haytni.plugin_enabled?(@module, Haytni.InvitablePlugin) and @module.fetch_config(Haytni.InvitablePlugin).invitation_required and is_nil(@changeset.params["code"]) do %>
  <div class="error">
    <p><%%= Haytni.InvitablePlugin.invitation_required_message() %></p>
  </div>
<%% else %>
  <.simple_form
    :let={f}
    for={@changeset}
    action={<%= inspect(web_module) %>.Router.Helpers.haytni_<%= scope %>_registration_path(@conn, :create)}
    as={:session}
  >

    <%%= if f.errors[:base] do %>
      <p><%%= elem(f.errors[:base], 0) %></p>
    <%% end %>

    <%%= <%= [web_module, :Haytni, camelized_scope, "SharedHTML"] |> Module.concat() |> inspect() %>.keys(%{changeset: @changeset, f: f, keys: @config.authentication_keys}) %>

    <.input
      required
      type="password"
      field={{f, :password}}
      label={Haytni.Gettext.dgettext("haytni", "Password")}
    />
    <%%= if Haytni.plugin_enabled?(@module, Haytni.PasswordPolicyPlugin) do %>
      <small id="passwordHelpBlock" class="form-text text-muted">
        <%% config = @module.fetch_config(Haytni.PasswordPolicyPlugin) %>
        <%%= Haytni.Gettext.dgettext("haytni", "Your password must be %{minimum_password_length}-%{maximum_password_length} characters long.", minimum_password_length: config.password_length.first, maximum_password_length: config.password_length.last) %>
      </small>
    <%% end %>

    <%%= if Haytni.plugin_enabled?(@module, Haytni.RememberablePlugin) do %>
      <.input
        type="checkbox"
        field={{f, :remember}}
        label={Haytni.Gettext.dgettext("haytni", "Remember Me?")}
      />
    <% end %>

    <:actions>
      <.button>
        <%%= Haytni.Gettext.dgettext("haytni", "Sign In") %>
      </.button>
      <.link href="/" class="btn">
        <%%= Haytni.Gettext.dgettext("haytni", "Cancel") %>
      </.link>
    </:actions>

  </.simple_form>

  <%%= <%= [web_module, :Haytni, camelized_scope, "SharedHTML"] |> Module.concat() |> inspect() %>.links(assigns) %>
<%% end %>
