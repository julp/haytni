<h2><%%= Haytni.Gettext.dgettext("haytni", "Change your password") %></h2>

<.simple_form
  :let={f}
  for={@changeset}
  action={<%= inspect(web_module) %>.Router.Helpers.haytni_<%= scope %>_password_path(@conn, :update)}
  as={:password}
  method="patch"
>

  <.input
    type="hidden"
    field={f[:reset_password_token]}
  />

  <.input
    required
    autofocus
    type="password"
    field={f[:password]}
    autocomplete="new-password"
    label={Haytni.Gettext.dgettext("haytni", "New password")}
    placeholder={Haytni.Gettext.dgettext("haytni", "your new password")}
  />
  <small
    id="passwordHelpBlock"
    class="form-text text-muted"
    :if={Haytni.plugin_enabled?(@module, Haytni.PasswordPolicyPlugin)}
  >
    <%% config = @module.fetch_config(Haytni.PasswordPolicyPlugin) %>
    <%%= Haytni.Gettext.dgettext("haytni", "Your password must be %{minimum_password_length}-%{maximum_password_length} characters long.", minimum_password_length: config.password_length.first, maximum_password_length: config.password_length.last) %>
  </small>

  <.input
    required
    type="password"
    autocomplete="off"
    field={f[:password_confirmation]}
    label={Haytni.Gettext.dgettext("haytni", "Confirm new password")}
    placeholder={Haytni.Gettext.dgettext("haytni", "your new password")}
  />

  <:actions>
    <.button>
      <%%= Haytni.Gettext.dgettext("haytni", "Change my password") %>
    </.button>
  </:actions>

</.simple_form>
